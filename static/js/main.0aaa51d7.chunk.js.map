{"version":3,"sources":["Firebase.js","components/LinkForm.jsx","components/Links.jsx","App.js","index.js"],"names":["fb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","LinkForm","props","useForm","register","errors","handleSubmit","setValue","initialStateValues","cantidad","name","description","useState","setValues","setAndGetLinkByid","id","a","collection","doc","get","link","console","log","data","useEffect","currentId","className","onSubmit","e","target","reset","type","placeholder","ref","required","value","message","cols","Links","setCurrentId","links","setLinks","addOrEditLink","set","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Zoom","update","info","getLinks","onSnapshot","querySnapshot","docs","forEach","push","onDeleteLink","linkId","window","confirm","delete","error","map","onClick","src","alt","App","newestOnTop","rtl","pauseOnFocusLoss","limit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aaa51d7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDgm1r5PSGsSCbESckuvq8Yfr5wWOIOVNQ\",\r\n    authDomain: \"fb-crud-react-d717c.firebaseapp.com\",\r\n    projectId: \"fb-crud-react-d717c\",\r\n    storageBucket: \"fb-crud-react-d717c.appspot.com\",\r\n    messagingSenderId: \"3407964452\",\r\n    appId: \"1:3407964452:web:ef66cef12ed247e9afebb1\"\r\n};\r\n// Initialize Firebase\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\nexport const db = fb.firestore();\r\nexport const storage = fb.storage();\r\n\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { db } from '../Firebase'\r\nimport { useForm } from 'react-hook-form'\r\n\r\n\r\nconst LinkForm = (props) => {\r\n\r\n    const { register, errors, handleSubmit, setValue } = useForm();\r\n\r\n    const initialStateValues = { // Links Initializate\r\n        cantidad: \"\",\r\n        name: \"\",\r\n        description: \"\"\r\n    }\r\n    const [values, setValues] = useState(initialStateValues) // LinksState\r\n\r\n    const onSubmit = (data, e) => {\r\n        console.log(data);\r\n        //props.addOrEditLink(data);\r\n        e.target.reset();\r\n    }\r\n\r\n    const setAndGetLinkByid = async (id) => {\r\n        const link = await db.collection('links').doc(id).get();\r\n        console.log(link);\r\n        setValue('name', link.data().name);\r\n        setValue('cantidad', link.data().cantidad)\r\n        setValue('description', link.data().description)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId === '') {\r\n            setValues({ ...initialStateValues });\r\n        } else {\r\n            setAndGetLinkByid(props.currentId);\r\n        }\r\n\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form className=\"card card-body\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-dark\">\r\n                    <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nombre del producto\"\r\n                    name=\"name\"\r\n                    ref={\r\n                        register({\r\n                            required: { value: true, message: 'Campo Obligatorio' }\r\n                        })\r\n                    } />\r\n            </div>\r\n            {\r\n                errors.name &&\r\n\r\n                <span className=\"badge badge-warning mb-4\">\r\n                    {/*<i className=\"material-icons \">warning</i>*/}\r\n                    {errors.name.message}\r\n                </span>\r\n\r\n            }\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-dark\">\r\n                    <i className=\"material-icons\">view_module</i>\r\n                </div>\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Cantidad\"\r\n                    name=\"cantidad\"\r\n                    ref={register({\r\n                        required: { value: true, message: 'Campo Obligatorio' }\r\n                    })}\r\n                />\r\n            </div>\r\n            {\r\n                errors.cantidad &&\r\n\r\n                <span className=\"badge badge-warning mb-4\">\r\n                    {/*<i className=\"material-icons \">warning</i>*/}\r\n                    {errors.cantidad.message}\r\n                </span>\r\n\r\n            }\r\n            <div className=\"form-group input-group\">\r\n                <textarea name=\"description\"\r\n                    cols=\"3\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Ingrese una descripcion\"\r\n                    ref={register}>\r\n                </textarea>\r\n            </div>\r\n\r\n            <div className=\"form-group input-group\">\r\n                <label >Imagen del producto:</label>\r\n                <input type=\"file\"\r\n                    name=\"inputFile\"\r\n                    ref={register} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-info btn-block\">\r\n                {props.currentId === '' ? 'Save' : 'Update'}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LinkForm\r\n","import React, { useEffect, useState, Fragment } from 'react' // UseState and useEffect new Hooks\r\nimport { toast, Zoom } from 'react-toastify' // import somethigns propertys of Toastify\r\nimport LinkForm from './LinkForm' //import component\r\nimport { db } from '../Firebase' //import Firestore of Firebase\r\n\r\nconst Links = () => {\r\n\r\n    const [currentId, setCurrentId] = useState('') // Estado de id al onClick de btn Edit\r\n    const [links, setLinks] = useState([]); // Estado Links saved\r\n\r\n    const addOrEditLink = async (links) => {\r\n        if (currentId === '') {\r\n            //Send data to Firestore of Firebase\r\n            await db.collection('links').doc().set(links); //doc(sin parametro) => crear ID autmatico unico\r\n            toast.success('Enlace Agregado!', {\r\n                position: \"top-right\",\r\n                autoClose: 1200,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                transition: Zoom\r\n            });\r\n        } else {\r\n            await db.collection('links').doc(currentId).update(links);\r\n            toast.info('Enlace Actualizado!', {\r\n                position: \"top-right\",\r\n                autoClose: 1200,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                transition: Zoom\r\n            });\r\n            setCurrentId('');\r\n        }\r\n    };\r\n\r\n    const getLinks = async () => {\r\n        // Traemos datos de Firebase (onSnapshot => Funcion de Firebase que esta a la escucha de cambios en la base de datos)\r\n        // querySnapshot => modelo o tipo de dato que devuelve Firebase (Study pls !! )\r\n        db.collection('links').onSnapshot(querySnapshot => {\r\n            const docs = [];\r\n            querySnapshot.forEach(doc => {\r\n                docs.push({ ...doc.data(), id: doc.id });\r\n\r\n            });\r\n            setLinks(docs);\r\n        }\r\n        )\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            getLinks();\r\n        }, []\r\n    );\r\n\r\n    const onDeleteLink = async (linkId) => {\r\n        if (window.confirm('Estas seguro de quere eliminar este enlace?')) {\r\n            await db.collection('links').doc(linkId).delete();\r\n            toast.error('Enlace eliminado!', {\r\n                position: \"top-right\",\r\n                autoClose: 1200,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4 p-2\">\r\n                    <h3 className=\"text-center\">Inventario de Productos</h3>\r\n                    <LinkForm {...{ addOrEditLink, currentId, links }} />\r\n                </div>\r\n                <div className=\"col p-4\">\r\n                    <div className=\"row row-cols-1 row-cols-md-3 g-2\">\r\n                        {\r\n                            links.map(link => (\r\n                                <div className=\"col mb-4\" key={link.id}>\r\n                                    <div className=\"card border-primary\" >\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <h4>{link.name}</h4>\r\n                                                <div>\r\n                                                    <i className=\"material-icons text-danger\"\r\n                                                        onClick={() =>\r\n                                                            onDeleteLink(link.id)}>\r\n                                                        close\r\n                                        </i>\r\n                                                    <i className=\"material-icons\"\r\n                                                        onClick={() =>\r\n                                                            setCurrentId(link.id)}>\r\n                                                        create\r\n                                        </i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h6 className=\"card-title\">Cantidad: {link.cantidad}</h6>\r\n                                            <img src=\"\" alt=\"\" />\r\n                                            <p>Description: {link.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n\r\n}\r\nexport default Links\r\n","import React from 'react'\r\nimport Links from './components/Links'\r\nimport { ToastContainer } from 'react-toastify'; // import Toastify library\r\nimport 'react-toastify/dist/ReactToastify.css'; // importa CSS Toastify styles\r\n// This App use Bootswatch Css Library\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container p-4\">\r\n      <Links />\r\n\r\n\r\n      {/*This tag is used to the ToastContainer Characters  */}\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        limit={3}\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './Firebase'\r\nimport 'bootswatch/dist/darkly/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}